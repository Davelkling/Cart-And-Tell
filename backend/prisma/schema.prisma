generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int           @id @default(autoincrement())
  password   String
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @default(now()) @updatedAt
  email      String        @unique
  isMerchant Boolean       @default(false)
  merchant   Merchant?
  Message    Message[]
  cart       ProductItem[]
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  icon     String?
  merchant Merchant[]
}

model Merchant {
  id                    Int              @id @default(autoincrement())
  name                  String           @unique
  website               String           @unique
  image                 String
  userId                Int              @unique
  createdAt             DateTime         @default(now())
  updatedAt             DateTime         @default(now()) @updatedAt
  categoryId            Int
  proofOfAuthenticity   String
  isVerified            Boolean          @default(false)
  isNotified            Boolean?         @default(false)
  merchantEndValidity   DateTime
  merchantRelationship  MerchantRelation @default(MerchantOwner)
  merchantStartValidity DateTime
  description           String
  LiveStream            LiveStream?
  category              Category         @relation(fields: [categoryId], references: [id])
  user                  User             @relation(fields: [userId], references: [id])
  products              Product[]
}

model Product {
  id            Int           @id @default(autoincrement())
  amount        Float
  description   String
  name          String
  image         String?
  merchantId    Int
  createdAt     DateTime      @default(now())
  rating        Int           @default(0)
  updatedAt     DateTime      @default(now()) @updatedAt
  LiveStream    LiveStream?
  merchant      Merchant      @relation(fields: [merchantId], references: [id])
  productItemId ProductItem[]
}

model ProductItem {
  id        Int      @id @default(autoincrement())
  userId    Int
  quantity  Int
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model LiveStream {
  roomId     String    @id
  merchantId Int       @unique
  productId  Int?      @unique
  Merchant   Merchant  @relation(fields: [merchantId], references: [id])
  Product    Product?  @relation(fields: [productId], references: [id])
  Message    Message[]
}

model Message {
  id               Int        @id @default(autoincrement())
  text             String
  userId           Int
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @default(now())
  liveStreamRoomId String
  LiveStream       LiveStream @relation(fields: [liveStreamRoomId], references: [roomId])
  User             User       @relation(fields: [userId], references: [id])
}

enum MerchantRelation {
  MerchantOwner
  ExclusiveDistributor
  NonExclusiveDistributor
}
